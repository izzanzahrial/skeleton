version: "3.9"
services:
  postgres:
    image: postgres:latest
    container_name: skeleton_db
    environment:
      - POSTGRES_PASSWORD=skeleton
      - POSTGRES_USER=skeleton
      - POSTGRES_DB=skeletonDB
      - PGTZ=Asia/Jakarta
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    container_name: skeleton_zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zoodata:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: skeleton_kafka
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafkadata:/bitnami/kafka"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    volumes:
      - grafana_data:/var/lib/grafana
    # copy dashboard internal configuration to grafana dashboard configuration
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
    # copy all dashboard internal to grafana dashboard
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    # copy datasource internal to grafana datasource
      - ./grafana/datasource/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.54
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    expose:
      - "16686"
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    expose:
      - "4317"
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    volumes:
      - ./otel-config.yaml:/etc/otelcol-contrib/config.yaml
    depends_on:
      - jaeger
      - prometheus
      
  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

volumes:
  pgdata:
  zoodata:
  kafkadata:
  grafana_data:
  prometheus_data: